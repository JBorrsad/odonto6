<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Supresión de warnings en archivos de test -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.suppressions.file}" default="checkstyle-suppressions.xml"/>
        <property name="optional" value="true"/>
    </module>

    <!-- Verificaciones a nivel de archivo -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="120"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>

    <module name="TreeWalker">
        <!-- =============== CLEAN CODE: LONGITUD DE MÉTODOS =============== -->
        <module name="MethodLength">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="30"/>
            <property name="countEmpty" value="false"/>
            <message key="maxLen.method" value="Método demasiado largo ({0} líneas, máximo: {1}). Considere refactorizar para mejorar la legibilidad."/>
        </module>

        <!-- =============== CLEAN CODE: COMPLEJIDAD CICLOMÁTICA =============== -->
        <module name="CyclomaticComplexity">
            <property name="max" value="10"/>
            <property name="tokens" value="LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_SWITCH, LITERAL_CASE, LITERAL_CATCH, QUESTION, LAND, LOR"/>
            <message key="cyclomaticComplexity" value="Complejidad ciclomática demasiado alta ({0}, máximo: {1}). Considere refactorizar."/>
        </module>

        <!-- =============== CLEAN CODE: ANIDACIÓN MÁXIMA =============== -->
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
            <message key="nested.if.depth" value="Anidación de IF demasiado profunda ({0}, máximo: {1}). Considere refactorizar."/>
        </module>

        <module name="NestedForDepth">
            <property name="max" value="2"/>
            <message key="nested.for.depth" value="Anidación de FOR demasiado profunda ({0}, máximo: {1}). Considere refactorizar."/>
        </module>

        <module name="NestedTryDepth">
            <property name="max" value="2"/>
            <message key="nested.try.depth" value="Anidación de TRY demasiado profunda ({0}, máximo: {1}). Considere refactorizar."/>
        </module>

        <!-- =============== CLEAN CODE: NÚMERO DE PARÁMETROS =============== -->
        <module name="ParameterNumber">
            <property name="max" value="5"/>
            <property name="tokens" value="METHOD_DEF"/>
            <message key="maxParam" value="Demasiados parámetros ({0}, máximo: {1}). Considere usar objetos de parámetros."/>
        </module>

        <!-- =============== CLEAN CODE: LONGITUD DE CLASES =============== -->
        <module name="FileLength">
            <property name="max" value="200"/>
            <property name="fileExtensions" value="java"/>
            <message key="maxLen.file" value="Archivo demasiado largo ({0} líneas, máximo: {1}). Considere dividir en clases más pequeñas."/>
        </module>

        <!-- =============== CLEAN CODE: SYSTEM.OUT.PRINTLN =============== -->
        <module name="Regexp">
            <property name="format" value="System\.out\.print"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <message key="regexp" value="Evite System.out.print*. Use un logger en su lugar."/>
        </module>

        <module name="Regexp">
            <property name="format" value="System\.err\.print"/>
            <property name="illegalPattern" value="true"/>
            <property name="ignoreComments" value="true"/>
            <message key="regexp" value="Evite System.err.print*. Use un logger en su lugar."/>
        </module>

        <!-- =============== CLEAN CODE: NOMBRES EXPRESIVOS =============== -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
            <message key="name.invalidPattern" value="Variable local debe tener un nombre expresivo (no abreviaciones)."/>
        </module>

        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Miembro de clase debe tener un nombre expresivo (no abreviaciones)."/>
        </module>

        <!-- =============== GOOD PRACTICES: INMUTABILIDAD =============== -->
        <module name="FinalParameters">
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
            <message key="final.parameter" value="Los parámetros deberían ser final para evitar modificaciones accidentales."/>
        </module>

        <!-- =============== GOOD PRACTICES: EXCEPCIONES =============== -->
        <module name="IllegalThrows">
            <property name="illegalClassNames" value="java.lang.Exception, java.lang.RuntimeException, java.lang.Throwable"/>
            <message key="illegal.throw" value="Evite lanzar excepciones genéricas. Use excepciones específicas del dominio."/>
        </module>

        <!-- =============== GOOD PRACTICES: IMPORTS =============== -->
        <module name="UnusedImports">
            <message key="import.unused" value="Import no utilizado. Elimine para mantener el código limpio."/>
        </module>

        <module name="RedundantImport">
            <message key="import.redundant" value="Import redundante. Elimine para mantener el código limpio."/>
        </module>

        <!-- =============== GOOD PRACTICES: ESPACIOS EN BLANCO =============== -->
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>

        <!-- =============== GOOD PRACTICES: COMENTARIOS =============== -->
        <module name="TodoComment">
            <property name="format" value="(TODO)|(FIXME)|(XXX)"/>
            <message key="todo.match" value="Comentario TODO/FIXME encontrado. Considere crear un ticket o resolver el problema."/>
        </module>
    </module>
</module> 