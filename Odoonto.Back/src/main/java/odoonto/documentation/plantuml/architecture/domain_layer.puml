@startuml Domain Layer

!theme plain
skinparam packageStyle rectangle
skinparam backgroundColor white
skinparam ClassBackgroundColor WhiteSmoke
skinparam ClassBorderColor Black
skinparam ArrowColor Black
skinparam linetype ortho

package "Domain Layer" {
  package "Model" {
    package "Aggregates" {
      class Patient {
        -id: PatientId
        -name: PersonName
        -email: EmailAddress
        -phoneNumber: PhoneNumber
        -address: Address
        -birthDate: LocalDate
        -sexo: Sexo
        +updateContactInfo()
      }
      
      class Doctor {
        -id: String
        -name: PersonName
        -email: EmailAddress
        -phoneNumber: PhoneNumber
        -specialties: List<Specialty>
        +addSpecialty()
        +removeSpecialty()
      }
      
      class Odontogram {
        -id: OdontogramId
        -teeth: List<Tooth>
        -patient: Patient
        +addLesion()
        +addTreatment()
      }
      
      class MedicalRecord {
        -id: MedicalRecordId
        -patient: Patient
        -entries: List<MedicalEntry>
        +addEntry()
        +getEntries()
      }
      
      class Appointment {
        -id: AppointmentId
        -patient: Patient
        -doctor: Doctor
        -time: AppointmentTime
        -status: AppointmentStatus
        +updateStatus()
      }
    }
    
    package "Entities" {
      class Tooth {
        -position: ToothPosition
        -lesions: List<Lesion>
        -treatments: List<Treatment>
        +addLesion()
        +addTreatment()
      }
      
      class Lesion {
        -id: UUID
        -type: LesionType
        -face: ToothFace
        -dateDetected: LocalDate
        -description: String
      }
      
      class Treatment {
        -id: UUID
        -type: TreatmentType
        -date: LocalDate
        -description: String
      }
      
      class MedicalEntry {
        -id: UUID
        -date: LocalDateTime
        -description: String
        -doctor: Doctor
      }
    }
    
    package "Value Objects" {
      class PatientId
      class EmailAddress
      class PhoneNumber
      class PersonName
      class Address
      class OdontogramId
      class MedicalRecordId
      class AppointmentId
      class AppointmentTime
      
      enum Sexo {
        MASCULINO
        FEMENINO
        OTRO
      }
      
      enum ToothFace {
        VESTIBULAR
        LINGUAL
        OCLUSAL
        MESIAL
        DISTAL
      }
      
      enum LesionType {
        CARIES
        FRACTURA
        EROSION
      }
      
      enum TreatmentType {
        OBTURACION
        ENDODONCIA
        CORONA
      }
      
      enum AppointmentStatus {
        PROGRAMADA
        CONFIRMADA
        CANCELADA
        COMPLETADA
      }
    }
  }
  
  package "Services" {
    class DentalDiagnosisService {
      +diagnoseFromOdontogram()
    }
    
    class TreatmentPlanService {
      +createTreatmentPlan()
    }
  }
  
  package "Events" {
    interface DomainEvent
    class PatientRegisteredEvent
    class AppointmentScheduledEvent
    class TreatmentCompletedEvent
    
    interface EventPublisher {
      +publish()
    }
  }
  
  package "Policy" {
    class SchedulingPolicy {
      +validateAppointmentTime()
    }
    
    class MedicalRecordPolicy {
      +validateEntryAccess()
    }
  }
  
  package "Exceptions" {
    class DomainException
    class InvalidPersonDataException
    class InvalidEmailException
    class InvalidPhoneException
  }
}

' Relaciones
Patient "1" -- "1" Odontogram
Patient "1" -- "1" MedicalRecord
Patient "1" -- "*" Appointment
Doctor "1" -- "*" Appointment
Odontogram "1" -- "*" Tooth
Tooth "1" -- "*" Lesion
Tooth "1" -- "*" Treatment
MedicalRecord "1" -- "*" MedicalEntry

DomainEvent <|-- PatientRegisteredEvent
DomainEvent <|-- AppointmentScheduledEvent
DomainEvent <|-- TreatmentCompletedEvent
DomainException <|-- InvalidPersonDataException
DomainException <|-- InvalidEmailException
DomainException <|-- InvalidPhoneException

@enduml 